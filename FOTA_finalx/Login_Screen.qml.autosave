

/*
This is a UI file (.ui.qml) that is intended to be edited in Qt Design Studio only.
It is supposed to be strictly declarative and only uses a subset of QML. If you edit
this file manually, you might introduce QML code that is not supported by Qt Design Studio.
Check out https://doc.qt.io/qtcreator/creator-quick-ui-forms.html for details on .ui.qml files.
*/
import QtQuick 6.5
import QtQuick.Controls 6.5


Rectangle {
    id: rectangle
    width: parent.width
    height: parent.height
    color: "#55aaff"

    Text {
        id: label
       // y: 44
        anchors.top: parent.top
        anchors.topMargin: parent.hight/3
        width: 566
        height: 102
        text: qsTr("Login to your account")
        font.pointSize: 35
        anchors.horizontalCenterOffset: 49
        //font.family: parent.font.family
        //anchors.topMargin: -154
        anchors.horizontalCenter: parent.horizontalCenter

        SequentialAnimation {
            id: animation

            ColorAnimation {
                id: colorAnimation1
                target: rectangle
                property: "color"
                to: "#2294c6"
                from: "#2294c6"
            }

            ColorAnimation {
                id: colorAnimation2
                target: rectangle
                property: "color"
                to: "#2294c6"
                from: "#2294c6"
            }
        }
    }

    TextEdit {
        id: textEdit
        x: 498
        y: 319
        width: 424
        height: 99
        text: qsTr("Enter your password")
        font.pixelSize: 40
    }

    TextInput {
        id: userid
        x: 498
        y: 175
        width: 389
        height: 100
        text: qsTr("Enter ur ID")
        font.pixelSize: 40
        //onActiveFocusChanged:  inputPanel.visible=true
        //Keys.onReturnPressed: inputPanel.visible=false
    }

    Button {
        id: button
        x: 714
        y: 466
        width: 548
        height: 109
        text: qsTr("Enter")
        icon.cache: false
        font.pointSize: 20
        onClicked: {
            stack.push(ask)
        }
    }

    Image {
        id: image
        x: 1271
        y: 70
        width: 282
        height: 217
        source: "./login.png"
        fillMode: Image.PreserveAspectFit
    }
    states: [
        State {
            name: "clicked"

            PropertyChanges {
                target: label
                text: qsTr("Button Checked")
            }
        }
    ]
}
